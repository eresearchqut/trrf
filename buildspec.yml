version: 0.2
env:
  git-credential-helper: yes
phases:
  pre_build:
    commands:
      - mkdir -p ~/.aws
      - echo "[profile cross-account]\nrole_arn = ${CLOUDFORMATION_BUILDER_ROLE_ARN}\ncredential_source = EcsContainer\nregion = ${AWS_DEFAULT_REGION}" >> ~/.aws/config
      - touch ~/.aws/credentials

      - git submodule update --init --recursive

      - echo Logging in to Amazon ECR...
      - ECR_PASSWORD=$(aws ecr get-login-password --region $AWS_DEFAULT_REGION)
      - echo $ECR_PASSWORD | docker login --username AWS --password-stdin $AWS_ACCCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - echo Logging in to Docker Hub...
      - echo $DOCKERHUB_PASSWORD | docker login --username $DOCKERHUB_USERNAME --password-stdin

      - touch .env_local
  build:
    commands:
      - echo Build started on `date`
      - docker-compose build
      - echo Running tests...
      - scripts/lint.sh
      - scripts/django-checks.sh
      - scripts/js_dependencies.py --verify
      - scripts/check-migrations.sh
#      - scripts/unit-tests.sh
#      - scripts/end2end-tests.sh
      - export GIT_TAG="$(echo $GIT_COMMIT_ID | cut -c1-8)"
      - export IMAGE_TAG=$GIT_TAG
      - echo "Building image from commit ${GIT_COMMIT_ID} ${GIT_COMMIT_URL}"
      - docker build -f docker/production/Dockerfile --label "release-id=${RELEASE_ID}" -t "${IMAGE_REPO}:${GIT_TAG}" -t "${IMAGE_REPO}:${GIT_BRANCH_NAME}" .

      # docker push used to be in post_build, but post_build is executed even on build failure.
      # We don't want to push the docker image if the build failed for any reason, so we can't do the docker push in post_build.
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push "${IMAGE_REPO}:${GIT_TAG}"
      - docker push "${IMAGE_REPO}:${GIT_BRANCH_NAME}"

      - export $(printf "AWS_ACCESS_KEY_ID=%s AWS_SECRET_ACCESS_KEY=%s AWS_SESSION_TOKEN=%s" $(aws sts assume-role --role-arn "${CLOUDFORMATION_BUILDER_ROLE_ARN}" --role-session-name "CloudformationBuilderRole" --query "Credentials.[AccessKeyId,SecretAccessKey,SessionToken]" --output text))

      - >
        aws cloudformation deploy
        --profile cross-account
        --template-file infra/longitudinal_followup_stack.yml
        --stack-name "${ENVIRONMENT_NAME}-${APPLICATION_NAME}-longitudinal-followup-stack"
        --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM
        --parameter-overrides
        EnvironmentName=$ENVIRONMENT_NAME
        ApplicationName=$APPLICATION_NAME
        AlertStackName=$ALERT_STACK_NAME
        NetworkStackName=$NETWORK_STACK_NAME
        EcrAccount=$ECR_ACCOUNT
        ImageTag=$GIT_TAG

      - unset AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN
  post_build:
    commands:
      - aws ssm put-parameter --overwrite --type String --name /app/$ENVIRONMENT_NAME/$APPLICATION_NAME/RELEASE_ID --value $IMAGE_TAG
      - envsubst < taskdef.json > out && mv out taskdef.json
      - envsubst < appspec.yaml > out && mv out appspec.yaml
artifacts:
  files:
    - 'taskdef.json'
    - 'appspec.yaml'
