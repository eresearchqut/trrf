# Generated by Django 3.2.16 on 2023-02-15 14:23

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('analytics', '0001_initial'),
    ]

    operations = [
        migrations.RunSQL(
            sql=
            """
            CREATE MATERIALIZED VIEW analytics_clinicaldataview AS
            with clinicaldata 
            as (
                select rdrf_cd.*, 
                        jsonb_array_elements(data#>'{forms}') as form,
                        row_number() over(partition by django_id) as form_entry_num
                from rdrf_clinicaldata rdrf_cd
                where collection = 'cdes'
                and   django_model = 'Patient'
            ),
            cd_forms as (
                select cd.*,
                        jsonb_extract_path_text(form, 'name') form_name,
                        jsonb_array_elements(form#>'{sections}') sections
                from clinicaldata cd
            ), 
            cd_sections as (
                select cd_forms.*,  
                        jsonb_extract_path_text(cd_forms.sections, 'code') section_code, 
                        jsonb_array_elements(cd_forms.sections#>'{cdes}') cdes
                from cd_forms
            ), 
            cd_cdes_prep as (
               select id,
                     form_name,
                     form_entry_num,
                     section_code,
                     1 as cde_entry_num,
                     jsonb_extract_path_text(cdes, 'code') cde_code, 
                     jsonb_extract_path(cdes, 'value') cde_value
               from cd_sections
               where jsonb_typeof(cdes) = 'object'
               union
               select id,
                     form_name,
                     form_entry_num,
                     section_code,
                     cde_entry_num,
                     jsonb_extract_path_text(cde_array, 'code') cde_code, 
                     jsonb_extract_path(cde_array, 'value') cde_value
               from (
                  select cd_sections.*, 
                         row_number() over(partition by id, form_name, section_code, form_entry_num) as cde_entry_num,
                         jsonb_array_elements(cdes) cde_array
                  from cd_sections
                  where jsonb_typeof(cdes) = 'array'
                ) as cd_cdes_array
            ), cd_cdes as (
                select id,
                         form_name,
                         form_entry_num,
                         section_code,
                         cde_entry_num, 
                         cde_code,
                         trim('"' from val::text) as cde_value
                from (
                    select cd_cdes_prep.*,
                             jsonb_array_elements_text(cde_value) as val
                    from cd_cdes_prep
                    where jsonb_typeof(cde_value) = 'array' 
                    union
                    select cd_cdes_prep.*,
                             cde_value::text as val
                    from cd_cdes_prep
                    where jsonb_typeof(cde_value) != 'array'
                ) cde_scalar_data
            )
            select   row_number() over() as id,
                     rcd.django_id as patient_id,
                     cde.form_name,
                     cde.form_entry_num,
                     cde.section_code,
                     cde.cde_entry_num,
                     cde.cde_code,
                     cde.cde_value
            from   cd_cdes           cde
            join   rdrf_clinicaldata rcd
            on     rcd.id = cde.id
            order by patient_id, form_entry_num, form_name, section_code, cde_entry_num, cde_code;
            """,
            reverse_sql=
            """
            DROP MATERIALIZED VIEW analytics_clinicaldataview;
            """
        ),
        migrations.RunSQL(
            sql=
            """
            CREATE UNIQUE INDEX analytics_clinicaldata_idx ON analytics_clinicaldataview(id);
            """,
            reverse_sql=
            """
            DROP INDEX analytics_clinicaldata_idx;
            """
        )
    ]
