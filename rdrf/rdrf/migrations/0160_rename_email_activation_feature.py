# Generated by Django 3.2.19 on 2023-06-26 10:28
import json

from django.db import migrations

def _rename_feature(registry, old_feature_name, new_feature_name):
    if registry.metadata_json:
        metadata = json.loads(registry.metadata_json)
        features = metadata.get("features", [])
        if old_feature_name in features:
            features.remove(old_feature_name)
            features.append(new_feature_name)
            metadata["features"] = features
            registry.metadata_json = json.dumps(metadata)
            registry.save()


def rename_feature(apps, schema_editor):
    Registry = apps.get_model("rdrf", "Registry")
    registries = Registry.objects.all()
    for registry in registries:
        _rename_feature(registry, 'patient_email_activation_optional_for_admin', 'user_email_activation_optional_for_admin')


def rollback_rename_feature(apps, schema_editor):
    Registry = apps.get_model("rdrf", "Registry")
    registries = Registry.objects.all()
    for registry in registries:
        _rename_feature(registry, 'user_email_activation_optional_for_admin', 'patient_email_activation_optional_for_admin')


class Migration(migrations.Migration):

    dependencies = [
        ('rdrf', '0159_add_email_activation_feature_to_registries'),
    ]

    operations = [
        migrations.RunPython(rename_feature, rollback_rename_feature)
    ]
