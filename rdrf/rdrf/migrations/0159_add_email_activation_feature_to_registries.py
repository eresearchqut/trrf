# Generated by Django 3.2.19 on 2023-06-26 09:56
import json

from django.db import migrations


def _add_feature(registry, feature):
    if registry.metadata_json:
        metadata = json.loads(registry.metadata_json)
    else:
        metadata = {}

    features = metadata.get("features", [])
    if feature not in features:
        features.append(feature)
        metadata["features"] = features
        registry.metadata_json = json.dumps(metadata)
        registry.save()


def _remove_feature(registry, feature):
    if registry.metadata_json:
        metadata = json.loads(registry.metadata_json)
        features = metadata.get("features", [])
        features.remove(feature)
        metadata["features"] = features
        registry.metadata_json = json.dumps(metadata)
        registry.save()


def turn_on_feature(apps, schema_editor):
    Registry = apps.get_model("rdrf", "Registry")
    registries = Registry.objects.all()
    for registry in registries:
        _add_feature(registry, 'patient_email_activation_optional_for_admin')


def rollback_turn_on_feature(apps, schema_editor):
    Registry = apps.get_model("rdrf", "Registry")
    registries = Registry.objects.all()
    for registry in registries:
        _remove_feature(registry, 'patient_email_activation_optional_for_admin')


class Migration(migrations.Migration):

    dependencies = [
        ('rdrf', '0158_update_arabic'),
    ]

    operations = [
        migrations.RunPython(turn_on_feature, rollback_turn_on_feature)
    ]
