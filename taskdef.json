{
    "containerDefinitions": [
        {
            "command": [
                "$COMMAND"
            ],
            "environment": [
                {
                    "name": "ENVIRONMENT_NAME",
                    "value": "$ENVIRONMENT_NAME"
                },
                {
                    "name": "APPLICATION_NAME",
                    "value": "$APPLICATION_NAME"
                },
                {
                    "name": "DBDATABASE",
                    "value": "$DBDATABASE"
                },
                {
                    "name": "DESIGN_MODE",
                    "value": "$DESIGN_MODE"
                },
                {
                    "name": "DJANGO_FIXTURES",
                    "value": "$DJANGO_FIXTURES"
                },
                {
                    "name": "FILE_STORAGE",
                    "value": "$FILE_STORAGE"
                },
                {
                    "name": "TRRF_SITE_NAME",
                    "value": "$TRRF_SITE_NAME"
                },
                {
                    "name": "DBPORT",
                    "value": "$DBPORT"
                },
                {
                    "name": "DBSERVER",
                    "value": "$DBSERVER"
                },
                {
                    "name": "CLINICAL_DBNAME",
                    "value": "$CLINICAL_DBNAME"
                },
                {
                    "name": "CSRF_TRUSTED_ORIGINS",
                    "value": "$CSRF_TRUSTED_ORIGINS"
                },
                {
                    "name": "DBNAME",
                    "value": "$DBNAME"
                },
                {
                    "name": "DBUSER",
                    "value": "$DBUSER"
                },
                {
                    "name": "REPORTING_DBNAME",
                    "value": "$REPORTING_DBNAME"
                },
                {
                    "name": "TRRF_SITE_DOMAIN",
                    "value": "$TRRF_SITE_DOMAIN"
                },
                {
                    "name": "AWS_STORAGE_BUCKET_NAME",
                    "value": "$AWS_STORAGE_BUCKET_NAME"
                },
                {
                    "name": "GIT_COMMIT_HASH",
                    "value": "$GIT_TAG"
                },
                {
                    "name": "STATIC_URL",
                    "value": "$AWS_STATIC_CONTENT_URL/$GIT_TAG/"
                },
                {
                    "name": "ALLOWED_HOSTS",
                    "value": "$ALLOWED_HOSTS"
                },
                {
                    "name": "IPRESTRICT_IGNORE_PROXY_HEADER",
                    "value": "$IPRESTRICT_IGNORE_PROXY_HEADER"
                },
                {
                    "name": "SECURE_SSL_REDIRECT",
                    "value": "$SECURE_SSL_REDIRECT"
                },
                {
                    "name": "PRODUCTION",
                    "value": "$PRODUCTION"
                },
                {
                    "name": "DEBUG",
                    "value": "$DEBUG"
                },
                {
                    "name": "DEFAULT_FROM_EMAIL",
                    "value": "$DEFAULT_FROM_EMAIL"
                },
                {
                    "name": "ALERT_EMAIL",
                    "value": "$ALERT_EMAIL"
                },
                {
                    "name": "EMAIL_SUBJECT_PREFIX",
                    "value": "$EMAIL_SUBJECT_PREFIX"
                },
                {
                    "name": "VIRUS_CHECKING_ENABLED",
                    "value": "$VIRUS_CHECKING_ENABLED"
                },
                {
                    "name": "VIDEO_HOSTING_ENABLED",
                    "value": "$VIDEO_HOSTING_ENABLED"
                }
                ,
                {
                    "name": "VIDEO_HOSTING_BASE_URL",
                    "value": "$VIDEO_HOSTING_BASE_URL"
                }
            ],
            "image": "${IMAGE_REPO}:${IMAGE_TAG}",
            "healthCheck": {
                "retries": 3,
                "command": [
                    "CMD-SHELL",
                    "curl -k -f https://localhost:$CONTAINER_PORT/health-check || exit 1"
                ],
                "timeout": 5,
                "interval": 10,
                "startPeriod": 30
            },
            "logConfiguration": {
                "logDriver": "awslogs",
                "options": {
                    "awslogs-create-group": "true",
                    "awslogs-group": "$AWSLOGS_GROUP",
                    "awslogs-region": "$AWS_DEFAULT_REGION",
                    "awslogs-stream-prefix": "$AWSLOGS_STREAM_PREFIX"
                }
            },
            "name": "$ENVIRONMENT_NAME-$APPLICATION_NAME",
            "essential": true,
            "portMappings": [
                {
                    "containerPort": $CONTAINER_PORT,
                    "hostPort": $CONTAINER_PORT
                }
            ],
            "secrets": [
                {
                    "name": "AWS_SES_ACCESS_KEY_ID",
                    "valueFrom": "$AWS_SES_ACCESS_KEY_ID"
                },
                {
                    "name": "AWS_SES_SECRET_ACCESS_KEY",
                    "valueFrom": "$AWS_SES_SECRET_ACCESS_KEY"
                },
                {
                    "name": "SECRET_KEY",
                    "valueFrom": "$SECRET_KEY"
                },
                {
                    "name": "RECAPTCHA_SECRET_KEY",
                    "valueFrom": "$RECAPTCHA_SECRET_KEY"
                },
                {
                    "name": "RECAPTCHA_SITE_KEY",
                    "valueFrom": "$RECAPTCHA_SITE_KEY"
                },
                {
                    "name": "DBPASS",
                    "valueFrom": "$DBPASS"
                }
            ]
        },
        {
            "name": "xray-daemon",
            "image": "public.ecr.aws/xray/aws-xray-daemon:latest",
            "cpu": 32,
            "memoryReservation": 256,
            "portMappings" : [
                {
                    "containerPort": 2000,
                    "protocol": "udp"
                },
                {
                    "containerPort": 2000,
                    "protocol": "tcp"
                }
            ]
        }
    ],
    "cpu": "$CPU",
    "executionRoleArn": "$EXECUTION_ROLE_ARN",
    "taskRoleArn": "$TASK_ROLE_ARN",
    "memory": "$MEMORY",
    "networkMode": "awsvpc",
    "family": "$TASK_DEF_NAME",
    "requiresCompatibilities": [
        "FARGATE"
    ]
}
